{
  "name": "@safeweb3/monolithic",
  "private": true,
  "devDependencies": {
    "@bazel/buildifier": "^4.2.3",
    "@types/react": "^17.0.11",
    "@types/react-dom": "^17.0.11",
    "lerna": "^3.15.0",
    "react": "^17.0.0",
    "react-dom": "^17.0.0",
    "tsdx": "^0.14.1",
    "typescript": "^4.4.4"
  },
  "workspaces": [
    "packages/*"
  ],
  "scripts": {
    "lerna": "lerna",
    "start": "lerna run start --stream --parallel",
    "test": "lerna run test --",
    "build": "lerna run build",
    "prepublish": "lerna run prepublish",
    "bazel:format": "find . -type f \\( -name \"*.bzl\" -or -name WORKSPACE -or -name BUILD -or -name BUILD.bazel \\) ! -path \"*/node_modules/*\" | xargs buildifier -v --warnings=attr-cfg,attr-license,attr-non-empty,attr-output-default,attr-single-file,constant-glob,ctx-actions,ctx-args,depset-iteration,depset-union,dict-concatenation,duplicated-name,filetype,git-repository,http-archive,integer-division,load,load-on-top,native-build,native-package,out-of-order-load,output-group,package-name,package-on-top,positional-args,redefined-variable,repository-name,same-origin-load,string-iteration,unsorted-dict-items,unused-variable",
    "bazel:lint": "yarn bazel:format --lint=warn",
    "bazel:lint-fix": "yarn bazel:format --lint=fix"
  }
}
